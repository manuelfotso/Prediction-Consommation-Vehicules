---
title: "DLC5_Prediction_Consommation_vehicule"
author: "manuelFotso"
format: html
editor: visual
---

# Prediction de la consommation des vehicules

# Collecte des donnees

# Analyse des donnees

```{r}
data("mtcars")
View(mtcars)
```

```{r}
summary(mtcars)

```

## Distribution de la consommation des vehicules

on observe que la consommation moyenne des vehicules est autour de 20

```{r}
#| echo: false
library(ggplot2)
ggplot(data = mtcars, aes(x="Consommation des vehicules", y= mpg))+
  geom_boxplot(color="blue", fill="blue")
```

# Choix des variables pertinentes

```{r}
mtcars$vs <- as.factor(mtcars$vs)
mtcars$am <- as.factor(mtcars$am)
plot(mtcars)
```

# Matrice de correlation entre les variables

# quantitatives

```{r}
base_quanti <- mtcars[,-which(names(mtcars)%in% c("vs","am"))]

```

```{r}
# Install and load reshape2 package
library(reshape2)

# creating correlation matrix
corr_mat <- round(cor(base_quanti),2)

# reduce the size of correlation matrix
melted_corr_mat <- melt(corr_mat)
head(melted_corr_mat)

# plotting the correlation heatmap
library(ggplot2)
ggplot(data = melted_corr_mat, aes(x=Var1, y=Var2, 
								fill=value)) + 
geom_tile() +
geom_text(aes(Var2, Var1, label = value), 
		color = "black", size = 2)

```

```         
```

les variables negativement reliees a la consommation sont cyl, disp, hp et carb

## Analyse de la liason entre mpg et am (qualitative deux modalites)

### Test parametrique de student

```{r}
ggplot(data = mtcars, aes(x=am, y=mpg))+
  geom_boxplot(aes(fill=mpg))
```

```{r}
#realisation d'un test pour comparer les moyennes de mpg entre les voitures a transmission manuelle et automatique
t.test(mpg ~ am, data=mtcars)
```

Verification des hypotheses

```{r}
#creation d'un QQ-plot pour la variable 'mpg'
qqnorm(mtcars$mpg)
qqline(mtcars$mpg, col="red")
```

```{r}
# Test de Shapiro-wilk pour 'mpg'
shapiro.test(mtcars$mpg)
```

```{r}
library(car)

# Appliquer le test de Levene sur les donnÃ©es mtcars (mpg par am)
leveneTest(mpg ~ am, data = mtcars)
```

# Construction du modele de regression lineaire

```         
```

```{r}
model<-lm(mpg ~ ., data = mtcars)

```

```{r}
summary(model)
```

```{r}
residualPlot(model)
```

```{r}
vif(model)
```

```{r}
ggplot(data = melted_corr_mat, aes(x=Var1, y=Var2, 
								fill=value)) + 
geom_tile() +
geom_text(aes(Var2, Var1, label = value), 
		color = "black", size = 2)
```

```{r}
mtcars_bis <- mtcars[,-which(names(mtcars)%in% c("cyl","disp","hp","carb","qsec"))]
model_bis <- lm(mpg ~ ., data = mtcars_bis)
```

```{r}
summary(model_bis)
```

```{r}
vif(model_bis)
```

Prediction

```{r}

```

```{r}

```

```{r}
?predict
```

```{r}
model<-lm(mpg ~ ., data = mtcars)
```

```{r}
summary(model)
```

```{r}
residualPlot(model)
```

```{r}
vif(model)
```

```{r}
mtcars_bis <- mtcars[,-which(names(mtcars)%in% c("cyl","disp","carb","qsec"))]
model_bis <- lm(mpg ~ ., data = mtcars_bis)
```

```{r}
summary(model_bis)
```

```{r}
vif(model_bis)
```

```{r}
predict(model_bis,data.frame(hp= 10,drat=5,wt=4,vs=as.factor(0),am=as.factor(0),gear=3))
```

\## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).
